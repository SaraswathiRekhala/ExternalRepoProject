/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.externalrepoproject.cascadedb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Many2oneC1 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`MANY2ONE_C1`")
public class Many2oneC1 implements Serializable {

    private Integer child1Id;
    private Integer child1Column1;
    private String child1Column2;
    private String child1Column3;
    private Many2oneP many2oneP;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`CHILD1_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getChild1Id() {
        return this.child1Id;
    }

    public void setChild1Id(Integer child1Id) {
        this.child1Id = child1Id;
    }

    @Column(name = "`CHILD1_COLUMN1`", nullable = true, scale = 0, precision = 10)
    public Integer getChild1Column1() {
        return this.child1Column1;
    }

    public void setChild1Column1(Integer child1Column1) {
        this.child1Column1 = child1Column1;
    }

    @Column(name = "`CHILD1_COLUMN2`", nullable = true, length = 255)
    public String getChild1Column2() {
        return this.child1Column2;
    }

    public void setChild1Column2(String child1Column2) {
        this.child1Column2 = child1Column2;
    }

    @Column(name = "`CHILD1_COLUMN3`", nullable = true, length = 255)
    public String getChild1Column3() {
        return this.child1Column3;
    }

    public void setChild1Column3(String child1Column3) {
        this.child1Column3 = child1Column3;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CHILD1_COLUMN1`", referencedColumnName = "`PARENT_ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_MANY2ONE_C_TO_MANY2ONmpv6N`"))
    @Fetch(FetchMode.JOIN)
    public Many2oneP getMany2oneP() {
        return this.many2oneP;
    }

    public void setMany2oneP(Many2oneP many2oneP) {
        if(many2oneP != null) {
            this.child1Column1 = many2oneP.getParentId();
        }

        this.many2oneP = many2oneP;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Many2oneC1)) return false;
        final Many2oneC1 many2oneC1 = (Many2oneC1) o;
        return Objects.equals(getChild1Id(), many2oneC1.getChild1Id());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getChild1Id());
    }
}