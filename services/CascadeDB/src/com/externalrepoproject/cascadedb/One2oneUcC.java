/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.externalrepoproject.cascadedb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * One2oneUcC generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ONE2ONE_UC_C`", uniqueConstraints = {
            @UniqueConstraint(name = "`UK_ONE2ONE_UC_C_CHILD_COLUMN1`", columnNames = {"`CHILD_COLUMN1`"})})
public class One2oneUcC implements Serializable {

    private Integer childId;
    private Integer childColumn1;
    private String childColumn2;
    private One2oneUcP one2oneUcP;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`CHILD_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getChildId() {
        return this.childId;
    }

    public void setChildId(Integer childId) {
        this.childId = childId;
    }

    @Column(name = "`CHILD_COLUMN1`", nullable = true, scale = 0, precision = 10)
    public Integer getChildColumn1() {
        return this.childColumn1;
    }

    public void setChildColumn1(Integer childColumn1) {
        this.childColumn1 = childColumn1;
    }

    @Column(name = "`CHILD_COLUMN2`", nullable = true, length = 255)
    public String getChildColumn2() {
        return this.childColumn2;
    }

    public void setChildColumn2(String childColumn2) {
        this.childColumn2 = childColumn2;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CHILD_COLUMN1`", referencedColumnName = "`PARENT_ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ONE2ONE_UC_C_TO_ONE2O6KQSj`"))
    @Fetch(FetchMode.JOIN)
    public One2oneUcP getOne2oneUcP() {
        return this.one2oneUcP;
    }

    public void setOne2oneUcP(One2oneUcP one2oneUcP) {
        if(one2oneUcP != null) {
            this.childColumn1 = one2oneUcP.getParentId();
        }

        this.one2oneUcP = one2oneUcP;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof One2oneUcC)) return false;
        final One2oneUcC one2oneUcC = (One2oneUcC) o;
        return Objects.equals(getChildId(), one2oneUcC.getChildId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getChildId());
    }
}