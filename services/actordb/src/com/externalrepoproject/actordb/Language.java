/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.externalrepoproject.actordb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Language generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`language`")
public class Language implements Serializable {

    private Short languageId;
    private String name;
    private Timestamp lastUpdate;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`language_id`", nullable = false, scale = 0, precision = 3)
    public Short getLanguageId() {
        return this.languageId;
    }

    public void setLanguageId(Short languageId) {
        this.languageId = languageId;
    }

    @Column(name = "`name`", nullable = false, length = 20)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`last_update`", nullable = false)
    public Timestamp getLastUpdate() {
        return this.lastUpdate;
    }

    public void setLastUpdate(Timestamp lastUpdate) {
        this.lastUpdate = lastUpdate;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Language)) return false;
        final Language language = (Language) o;
        return Objects.equals(getLanguageId(), language.getLanguageId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getLanguageId());
    }
}